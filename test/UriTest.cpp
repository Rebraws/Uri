#include "UriTest.h"

auto UriTest::SetUp() -> void {
  
  using namespace std::string_literals; 
  using namespace AfterUri;
  
  mTestCases = std::vector<TestCase> {
    TestCase{"https://www.example.com", 
      "www.example.com"s, 
      "https"s,
      {},
      ""s,
      ""s,
      false,
      0, 
      Error::OK
    },
    TestCase{"https://www2.example.com/",
      "www2.example.com"s,
      "https", 
      {}, 
      ""s,
      ""s,
      false,
      0,
      Error::OK
    },
    TestCase{"https://www.example.com/foo/bar", 
      "www.example.com"s,
      "https", 
      {"foo"s, "bar"s}, 
      ""s,
      ""s,
      false,
      0,
      Error::OK
    },
    TestCase{"ftp://example.com//foo", 
      "example.com"s,
      "ftp"s,
      {"foo"s}, 
      ""s,
      ""s,
      false,
      0,
      Error::OK
    },
    TestCase{"http://www.example.com:80/foo/bar", 
      "www.example.com:80"s, 
      "http"s,
      {"foo"s, "bar"s}, 
      ""s,
      ""s,
      true, 
      80,
      Error::OK
    },
    TestCase{"tel:+1-816-555-1212", 
      ""s,
      "tel"s,
      {"+1-816-555-1212"s},
      ""s,
      ""s,
      false, 
      0,
      Error::OK
    },
    TestCase{"urn:oasis:name:specification:docbook:dtd:xm:4.1.2", 
      ""s,
      "urn"s,
      {"oasis"s, "name"s, "specification"s, "docbook"s, "dtd"s, "xm"s,
      "4.1.2"s}, 
      ""s,
      ""s,
      false, 
      0,
      Error::OK
    },
    TestCase{"ftp:://example.com", 
      ""s, 
      ""s,
      {},
      ""s,
      ""s,
      false,
      0,
      Error::UNKOWN_ERROR
    },
    TestCase{"HTTPS://www.example.com?query=foo", 
      "www.example.com"s,
      "https"s, 
      {},
      "query=foo"s,
      ""s,
      false,
      0,
      Error::OK
    },
    TestCase{"http://ww2.example.com:80#foo", 
      "ww2.example.com:80"s,
      "http"s, 
      {},
      ""s,
      "foo"s,
      true,
      80,
      Error::OK
    },
    TestCase{"http://rebraws@example.com:80?query=foo#bar", 
      "rebraws@example.com:80"s,
      "http"s,
      {},
      "query=foo"s,
      "bar"s,
      true,
      80,
      Error::OK
    },
    TestCase{"http://rebraws@www.example.com:80/?query=foo#bar", 
      "rebraws@www.example.com:80"s,
      "http"s,
      {},
      "query=foo"s,
      "bar"s,
      true,
      80,
      Error::OK
    },
    TestCase{"http://rebraws@www.example.com:80/foo/bar?query=foo#bar", 
      "rebraws@www.example.com:80"s,
      "http"s,
      {"foo"s, "bar"s},
      "query=foo"s,
      "bar"s,
      true,
      80,
      Error::OK
    },
    TestCase{"ldap://[2001:0db8:85a3:0000:0000:8a2e:0370:7334]/c=GB?objectClass?one", 
      "[2001:0db8:85a3:0000:0000:8a2e:0370:7334]"s,
      "ldap"s,
      {"c=GB"s},
      "objectClass?one"s, 
      ""s,
      false,
      0,
      Error::OK
    },
    TestCase{"ldap://[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080/c=GB?objectClass?two", 
      "[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080"s,
      "ldap"s,
      {"c=GB"s},
      "objectClass?two"s, 
      ""s,
      true,
      8080,
      Error::OK
    } 
   };
    // add test for 
    // ldap://ds.example.com:389/dc=example,dc=com?givenName,sn,cn?sub?(uid=john.doe)


  
}

